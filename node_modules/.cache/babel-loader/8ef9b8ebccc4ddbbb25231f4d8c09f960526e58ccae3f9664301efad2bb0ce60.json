{"ast":null,"code":"!function (n, e) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? e(exports, require(\"react\"), require(\"uuid\"), require(\"styled-components\")) : \"function\" == typeof define && define.amd ? define([\"exports\", \"react\", \"uuid\", \"styled-components\"], e) : e((n = \"undefined\" != typeof globalThis ? globalThis : n || self).AnimatedText = {}, n.React, n.uuid, n.styled);\n}(this, function (n, e, t, i) {\n  \"use strict\";\n\n  function a(n) {\n    return n && \"object\" == typeof n && \"default\" in n ? n : {\n      default: n\n    };\n  }\n  var r = a(e),\n    o = a(i),\n    _l = function l() {\n      return _l = Object.assign || function (n) {\n        for (var e, t = 1, i = arguments.length; t < i; t++) for (var a in e = arguments[t]) Object.prototype.hasOwnProperty.call(e, a) && (n[a] = e[a]);\n        return n;\n      }, _l.apply(this, arguments);\n    };\n  function u(n, e) {\n    return Object.defineProperty ? Object.defineProperty(n, \"raw\", {\n      value: e\n    }) : n.raw = e, n;\n  }\n  var c,\n    s,\n    d,\n    f = o.default.span(c || (c = u([\"\\n  position: relative;\\n  display: inline-block;\\n  visibility: hidden;\\n\"], [\"\\n  position: relative;\\n  display: inline-block;\\n  visibility: hidden;\\n\"]))),\n    p = o.default.div(d || (d = u([\"\\n  @keyframes fragmentletter-\", \" {\\n    0% {\\n      opacity: 0;\\n      visibility: hidden;\\n      transform: translateX(\", \")\\n        translateY(\", \")\\n        scale(\", \");\\n    }\\n    100% {\\n      oapcity: 1;\\n      visibility: visible;\\n      transform: translateX(0) translateY(0) scale(1);\\n    }\\n  }\\n\\n  & > span {\\n    display: inline-block;\\n  }\\n\\n  & \", \" {\\n    text-decoration: inherit;\\n    vertical-align: inherit;\\n\\n    animation: \", \";\\n\\n    animation-name: \", \";\\n  }\\n\\n  \", \"\\n\"], [\"\\n  @keyframes fragmentletter-\", \" {\\n    0% {\\n      opacity: 0;\\n      visibility: hidden;\\n      transform: translateX(\", \")\\n        translateY(\", \")\\n        scale(\", \");\\n    }\\n    100% {\\n      oapcity: 1;\\n      visibility: visible;\\n      transform: translateX(0) translateY(0) scale(1);\\n    }\\n  }\\n\\n  & > span {\\n    display: inline-block;\\n  }\\n\\n  & \", \" {\\n    text-decoration: inherit;\\n    vertical-align: inherit;\\n\\n    animation: \", \";\\n\\n    animation-name: \", \";\\n  }\\n\\n  \", \"\\n\"])), function (n) {\n      return n.uid;\n    }, function (n) {\n      var e = n.animation.x;\n      return null != e ? e : 0;\n    }, function (n) {\n      var e = n.animation.y;\n      return null != e ? e : 0;\n    }, function (n) {\n      var e = n.animation.scale;\n      return null != e ? e : 1;\n    }, f, function (n) {\n      var e = n.animation.ease,\n        t = n.duration;\n      return \"\".concat(t, \"s \").concat(null != e ? e : \"ease-in-out\", \" forwards;\");\n    }, function (n) {\n      var e = n.shouldAnimate,\n        t = n.uid;\n      return e ? \"fragmentletter-\".concat(t) : \"\";\n    }, function (n) {\n      for (var e = n.count, t = void 0 === e ? 0 : e, a = n.interval, r = \"\", o = 0; o < t; o += 1) r += \"\".concat(f, \":nth-of-type(\").concat(o + 1, \") {\\n            animation-delay: \").concat((a || .04) * o, \"s;\\n          }\");\n      return i.css(s || (s = u([\"\\n      \", \"\\n    \"], [\"\\n      \", \"\\n    \"])), r);\n    }),\n    y = {\n      blocks: {\n        y: \"60px\",\n        interval: .07,\n        duration: .7\n      },\n      wave: {\n        y: \"40px\",\n        interval: .04,\n        duration: .4,\n        ease: \"ease-in-out\"\n      },\n      float: {\n        x: \"200px\",\n        ease: \"cubic-bezier(0.68, -0.55, 0.265, 1.55)\",\n        duration: 1.2,\n        interval: .1\n      },\n      bounce: {\n        y: \"200px\",\n        ease: \"cubic-bezier(0.68, -0.55, 0.265, 1.55)\"\n      },\n      throw: {\n        y: \"200px\",\n        scale: 2,\n        interval: .07\n      },\n      diagonal: {\n        x: \"200px\",\n        y: \"-200px\",\n        ease: \"cubic-bezier(0.68, -4.55, 0.265, 1.55)\"\n      },\n      rifle: {\n        y: \"100px\",\n        x: \"-500px\",\n        ease: \"ease-in\",\n        duration: .3,\n        interval: .03\n      },\n      lights: {\n        y: \"-20px\",\n        ease: \"ease-out\",\n        duration: 1,\n        interval: .4\n      }\n    },\n    v = \" \",\n    m = \"words\",\n    b = {\n      y: \"-30px\"\n    };\n  n.WHITE_SPACE_CODE = v, n.default = function (n) {\n    var i,\n      a,\n      o,\n      u,\n      c = n.children,\n      s = void 0 === c ? \"\" : c,\n      d = n.type,\n      h = void 0 === d ? m : d,\n      g = n.interval,\n      x = n.duration,\n      O = n.animation,\n      w = void 0 === O ? b : O,\n      k = n.animationType,\n      E = void 0 === k ? m : k,\n      S = n.tag,\n      _ = void 0 === S ? \"div\" : S,\n      j = n.includeWhiteSpaces,\n      T = void 0 !== j && j,\n      P = n.rootMargin,\n      I = n.threshold,\n      M = function (n, e) {\n        var t = {};\n        for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && e.indexOf(i) < 0 && (t[i] = n[i]);\n        if (null != n && \"function\" == typeof Object.getOwnPropertySymbols) {\n          var a = 0;\n          for (i = Object.getOwnPropertySymbols(n); a < i.length; a++) e.indexOf(i[a]) < 0 && Object.prototype.propertyIsEnumerable.call(n, i[a]) && (t[i[a]] = n[i[a]]);\n        }\n        return t;\n      }(n, [\"children\", \"type\", \"interval\", \"duration\", \"animation\", \"animationType\", \"tag\", \"includeWhiteSpaces\", \"rootMargin\", \"threshold\"]),\n      A = e.useState([]),\n      H = A[0],\n      L = A[1],\n      X = e.useState(!1),\n      Y = X[0],\n      q = X[1],\n      z = e.useRef(null),\n      D = null !== (i = null == y ? void 0 : y[E]) && void 0 !== i ? i : w;\n    e.useEffect(function () {\n      if (\"string\" == typeof s || \"number\" == typeof s) {\n        var n = function (n) {\n          var e,\n            t = function (n) {\n              return n.toString().split(\" \");\n            }(n);\n          return (e = []).concat.apply(e, t.map(function (n, e) {\n            return 0 !== e ? [v, n] : [n];\n          })).map(function (n) {\n            return \" \" === n ? v : n;\n          });\n        }(s);\n        L(n);\n        var e = new IntersectionObserver(function (n, e) {\n          n.forEach(function (n) {\n            n.isIntersecting && (q(!0), z.current && e.unobserve(z.current));\n          });\n        }, {\n          rootMargin: P || \"20%\",\n          threshold: I || 0\n        });\n        return z.current && e.observe(z.current), function () {\n          L([]), q(!1);\n        };\n      }\n      console.error(\"Only string (ReactText) is currently allowed as react-animated-text-content component's child. Please, change to proper type.\");\n    }, [s, h]);\n    var R = t.v4();\n    return r.default.createElement(p, _l({\n      as: _,\n      count: \"words\" === h ? H.length : 0,\n      interval: g || (null !== (a = null == D ? void 0 : D.interval) && void 0 !== a ? a : .04),\n      duration: x || (null !== (o = null == D ? void 0 : D.duration) && void 0 !== o ? o : .4),\n      ref: z,\n      shouldAnimate: Y,\n      uid: R,\n      animation: D,\n      \"data-testid\": \"animated-text\"\n    }, M), \"words\" === h ? function (n, e) {\n      return n.map(function (n, t) {\n        return n !== v ? r.default.createElement(f, {\n          key: t,\n          dangerouslySetInnerHTML: {\n            __html: n\n          }\n        }) : e && r.default.createElement(f, {\n          key: \"\".concat(t, \"&nbsp;\"),\n          dangerouslySetInnerHTML: {\n            __html: \"&nbsp;\"\n          }\n        }) || v;\n      });\n    }(H, T) : function (n, e, t) {\n      var i = -1;\n      return n.map(function (n, a) {\n        var o = n !== v ? Array.from(n) : [v];\n        return o[0] !== v ? r.default.createElement(\"span\", {\n          key: a\n        }, o.map(function (n, t) {\n          return i += 1, r.default.createElement(f, {\n            key: t,\n            dangerouslySetInnerHTML: {\n              __html: n\n            },\n            style: {\n              animationDelay: \"\".concat(e * i, \"s\")\n            }\n          });\n        })) : t ? r.default.createElement(f, {\n          key: \"\".concat(a, \"&nbsp;\"),\n          dangerouslySetInnerHTML: {\n            __html: \"&nbsp;\"\n          },\n          style: {\n            animationDelay: \"\".concat(e * i, \"s\")\n          }\n        }) : v;\n      });\n    }(H, g || (null !== (u = null == D ? void 0 : D.interval) && void 0 !== u ? u : .04), T));\n  }, Object.defineProperty(n, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"mappings":"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","names":["s","d","AnimatedFragment","styled","span","StyledWrapper","div","_a","x","y","scale","ease","duration","shouldAnimate","uid","_b","interval","styles","i","count","css","PREDEFINED_ANIMATIONS","blocks","wave","float","bounce","throw","diagonal","rifle","lights","WHITE_SPACE_CODE","DEFAULT_TYPE","DEFAULT_ANIMATION","n","_f","children","_g","type","_h","animation","_j","animationType","_k","tag","_l","includeWhiteSpaces","rootMargin","threshold","props","_m","useState","arrayToRender","setArrayToRender","_o","setShouldAnimate","wrapperRef","useRef","animationOptions","useEffect","concatedChildren","splittedChildren","toString","split","splitChildrenToFragments","concat","map","word","index","concatFragments","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","unobserve","observe","console","error","uuidv4","React","as","length","ref","fragment","key","dangerouslySetInnerHTML","__html","renderWords","fullIndex","chars","Array","from","char","charIndex","style","animationDelay","renderChars"],"sources":["/media/akshay/1TB Drive/js project/akshaygitbh/node_modules/react-animated-text-content/src/helpers.ts","/media/akshay/1TB Drive/js project/akshaygitbh/node_modules/react-animated-text-content/src/styles/AnimatedFragment.styled.ts","/media/akshay/1TB Drive/js project/akshaygitbh/node_modules/react-animated-text-content/src/index.tsx"],"sourcesContent":["import { ReactText } from 'react';\nimport { WHITE_SPACE_CODE } from '.';\n\nexport const splitChildrenToFragments = (children: ReactText) =>\n  children.toString().split(' ');\n\nexport const concatFragments = (children: ReactText) => {\n  const splittedChildren = splitChildrenToFragments(children);\n\n  return ([] as string[])\n    .concat(\n      ...splittedChildren.map((word, index) =>\n        index !== 0 ? [WHITE_SPACE_CODE, word] : [word]\n      )\n    )\n    .map((word) => (word === ' ' ? WHITE_SPACE_CODE : word));\n};\n","import styled, { css } from 'styled-components';\nimport { AnimationShapeType } from '..';\n\nexport const AnimatedFragment = styled.span<{\n  count?: number;\n  interval?: number;\n}>`\n  position: relative;\n  display: inline-block;\n  visibility: hidden;\n`;\n\nexport const StyledWrapper = styled.div<{\n  uid: string;\n  count: number;\n  interval: number;\n  duration: number;\n  shouldAnimate: boolean;\n  animation: AnimationShapeType;\n}>`\n  @keyframes fragmentletter-${({ uid }) => uid} {\n    0% {\n      opacity: 0;\n      visibility: hidden;\n      transform: translateX(${({ animation: { x } }) => x ?? 0})\n        translateY(${({ animation: { y } }) => y ?? 0})\n        scale(${({ animation: { scale } }) => scale ?? 1});\n    }\n    100% {\n      oapcity: 1;\n      visibility: visible;\n      transform: translateX(0) translateY(0) scale(1);\n    }\n  }\n\n  & > span {\n    display: inline-block;\n  }\n\n  & ${AnimatedFragment} {\n    text-decoration: inherit;\n    vertical-align: inherit;\n\n    animation: ${({ animation: { ease }, duration }) =>\n      `${duration}s ${ease ?? 'ease-in-out'} forwards;`};\n\n    animation-name: ${({ shouldAnimate, uid }) =>\n      shouldAnimate ? `fragmentletter-${uid}` : ''};\n  }\n\n  ${({ count = 0, interval }) => {\n    let styles = '';\n\n    for (let i = 0; i < count; i += 1) {\n      styles += `${AnimatedFragment}:nth-of-type(${i + 1}) {\n            animation-delay: ${(interval || 0.04) * i}s;\n          }`;\n    }\n\n    return css`\n      ${styles}\n    `;\n  }}\n`;\n","import React, {\n  ElementType,\n  ReactText,\n  useEffect,\n  useState,\n  useRef,\n  FC,\n  ReactNode,\n} from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { concatFragments } from './helpers';\nimport {\n  AnimatedFragment,\n  StyledWrapper,\n} from './styles/AnimatedFragment.styled';\n\nexport interface AnimationShapeType {\n  x?: string;\n  y?: string;\n  scale?: number;\n  ease?: string;\n}\n\ntype AnimationType =\n  | 'blocks'\n  | 'wave'\n  | 'float'\n  | 'bounce'\n  | 'throw'\n  | 'diagonal'\n  | 'rifle'\n  | 'lights';\n\ninterface AnimatedTextProps {\n  type?: 'chars' | 'words';\n  children?: ReactText;\n  interval?: number;\n  duration?: number;\n  animation?: AnimationShapeType;\n  animationType?: AnimationType;\n  tag?: ElementType;\n  className?: string;\n  includeWhiteSpaces?: boolean;\n  threshold?: number;\n  rootMargin?: string;\n}\n\ninterface ExtendedAnimationShapeType extends AnimationShapeType {\n  duration?: number;\n  interval?: number;\n}\n\nconst PREDEFINED_ANIMATIONS: Record<AnimationType, ExtendedAnimationShapeType> =\n  {\n    blocks: {\n      y: '60px',\n      interval: 0.07,\n      duration: 0.7,\n    },\n    wave: {\n      y: '40px',\n      interval: 0.04,\n      duration: 0.4,\n      ease: 'ease-in-out',\n    },\n    float: {\n      x: '200px',\n      ease: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)',\n      duration: 1.2,\n      interval: 0.1,\n    },\n    bounce: { y: '200px', ease: 'cubic-bezier(0.68, -0.55, 0.265, 1.55)' },\n    throw: {\n      y: '200px',\n      scale: 2,\n      interval: 0.07,\n    },\n    diagonal: {\n      x: '200px',\n      y: '-200px',\n      ease: 'cubic-bezier(0.68, -4.55, 0.265, 1.55)',\n    },\n    rifle: {\n      y: '100px',\n      x: '-500px',\n      ease: 'ease-in',\n      duration: 0.3,\n      interval: 0.03,\n    },\n    lights: {\n      y: '-20px',\n      ease: 'ease-out',\n      duration: 1,\n      interval: 0.4,\n    },\n  };\n\nexport const WHITE_SPACE_CODE = ' ';\nconst DEFAULT_INTERVAL = 0.04;\nconst DEFAULT_DURATION = 0.4;\nconst DEFAULT_TYPE = 'words';\nconst DEFAULT_ANIMATION = {\n  y: '-30px',\n};\nconst DEFAULT_TAG = 'div';\nconst DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN = '20%';\nconst DEFAULT_THRESHOLD = 0;\n\nconst renderWords = (\n  arrayToRender: string[],\n  includeWhiteSpaces: boolean\n): ReactNode =>\n  arrayToRender.map((fragment, index) =>\n    fragment !== WHITE_SPACE_CODE ? (\n      <AnimatedFragment\n        key={index}\n        dangerouslySetInnerHTML={{ __html: fragment }}\n      />\n    ) : (\n      (includeWhiteSpaces && (\n        <AnimatedFragment\n          key={`${index}&nbsp;`}\n          dangerouslySetInnerHTML={{ __html: '&nbsp;' }}\n        />\n      )) ||\n      WHITE_SPACE_CODE\n    )\n  );\n\nconst renderChars = (\n  arrayToRender: string[],\n  interval: number,\n  includeWhiteSpaces: boolean\n): ReactNode => {\n  let fullIndex = -1;\n\n  return arrayToRender.map((fragment, index) => {\n    const chars =\n      fragment !== WHITE_SPACE_CODE ? Array.from(fragment) : [WHITE_SPACE_CODE];\n\n    if (chars[0] !== WHITE_SPACE_CODE)\n      return (\n        <span key={index}>\n          {chars.map((char, charIndex) => {\n            fullIndex += 1;\n\n            return (\n              <AnimatedFragment\n                key={charIndex}\n                dangerouslySetInnerHTML={{ __html: char }}\n                style={{ animationDelay: `${interval * fullIndex}s` }}\n              />\n            );\n          })}\n        </span>\n      );\n\n    return includeWhiteSpaces ? (\n      <AnimatedFragment\n        key={`${index}&nbsp;`}\n        dangerouslySetInnerHTML={{ __html: '&nbsp;' }}\n        style={{ animationDelay: `${interval * fullIndex}s` }}\n      />\n    ) : (\n      WHITE_SPACE_CODE\n    );\n  });\n};\n\nconst AnimatedText: FC<AnimatedTextProps> = ({\n  children = '',\n  type = DEFAULT_TYPE,\n  interval,\n  duration,\n  animation = DEFAULT_ANIMATION,\n  animationType = DEFAULT_TYPE,\n  tag = DEFAULT_TAG,\n  includeWhiteSpaces = false,\n  rootMargin,\n  threshold,\n  ...props\n}) => {\n  const [arrayToRender, setArrayToRender] = useState<string[]>([]);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const wrapperRef = useRef(null);\n\n  const animationOptions = PREDEFINED_ANIMATIONS?.[animationType] ?? animation;\n\n  useEffect(() => {\n    if (typeof children !== 'string' && typeof children !== 'number') {\n      console.error(\n        \"Only string (ReactText) is currently allowed as react-animated-text-content component's child. Please, change to proper type.\"\n      );\n      return;\n    }\n\n    const concatedChildren = concatFragments(children);\n    setArrayToRender(concatedChildren);\n\n    const observer = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          if (!entry.isIntersecting) return;\n\n          setShouldAnimate(true);\n          if (wrapperRef.current) observer.unobserve(wrapperRef.current);\n        });\n      },\n      {\n        rootMargin: rootMargin || DEFAULT_INTESECTION_OBSERVER_ROOT_MARGIN,\n        threshold: threshold || DEFAULT_THRESHOLD,\n      }\n    );\n\n    if (wrapperRef.current) {\n      observer.observe(wrapperRef.current);\n    }\n\n    return () => {\n      setArrayToRender([]);\n      setShouldAnimate(false);\n    };\n  }, [children, type]);\n\n  const uid = uuidv4();\n\n  return (\n    <StyledWrapper\n      as={tag}\n      count={type === 'words' ? arrayToRender.length : 0}\n      interval={interval || (animationOptions?.interval ?? DEFAULT_INTERVAL)}\n      duration={duration || (animationOptions?.duration ?? DEFAULT_DURATION)}\n      ref={wrapperRef}\n      shouldAnimate={shouldAnimate}\n      uid={uid}\n      animation={animationOptions}\n      data-testid=\"animated-text\"\n      {...props}\n    >\n      {type === 'words'\n        ? renderWords(arrayToRender, includeWhiteSpaces)\n        : renderChars(\n            arrayToRender,\n            interval || (animationOptions?.interval ?? DEFAULT_INTERVAL),\n            includeWhiteSpaces\n          )}\n    </StyledWrapper>\n  );\n};\n\nexport default AnimatedText;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}